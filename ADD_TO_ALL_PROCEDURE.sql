USE Hospital;
GO

CREATE PROCEDURE AddToAll(@COLUMN_NAME VARCHAR(50), @COLUMN_DATATYPE VARCHAR(50))
AS BEGIN
	--Declare Variables
	DECLARE @TableName VARCHAR(100)
	DECLARE @TableSchema VARCHAR(100)

	--Declare Cursor
	DECLARE CUR CURSOR FOR
	  SELECT TABLE_SCHEMA,
			 TABLE_NAME
	  FROM   INFORMATION_SCHEMA.TABLES
	  WHERE  TABLE_TYPE = 'BASE TABLE'
	--OPEN CURSOR
	OPEN CUR
	--Fetch First Row
	FETCH NEXT FROM CUR INTO @TableSchema,@TableName
	--Loop
	WHILE @@FETCH_STATUS = 0
	  BEGIN

	  DECLARE @SQL NVARCHAR(MAX)
	  SET @SQL=NULL
	  IF NOT EXISTS ( SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS 
		   WHERE TABLE_NAME=@TableName AND COLUMN_NAME=@COLUMN_NAME 
	and Table_Schema=@TableSchema)
	  BEGIN
	  SET @SQL='ALTER TABLE '+@TableSchema+'.'+@TableName +' ADD '+@COLUMN_NAME
							 + ' '+@COLUMN_DATATYPE
		PRINT @SQL
		EXEC ( @SQL)
	  END
   
	  IF EXISTS ( SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS 
				  WHERE TABLE_NAME=@TableName AND COLUMN_NAME=@COLUMN_NAME 
	and Table_Schema=@TableSchema)
	  BEGIN
	  PRINT 'Column Already exists in Table'
	  END
		  FETCH NEXT FROM CUR INTO @TableSchema,@TableName
	  END
	--Close and Deallocate Cursor
	CLOSE CUR
	DEALLOCATE CUR
END
GO

CREATE FUNCTION PK(@TN VARCHAR(256))
RETURNS VARCHAR(256)
AS BEGIN
	DECLARE @Ret VARCHAR(256);
	
	SELECT @Ret=Col.Column_Name FROM
		INFORMATION_SCHEMA.TABLE_CONSTRAINTS Tab, 
		INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE Col 
	WHERE 
		Col.Constraint_Name = Tab.Constraint_Name
		AND Col.Table_Name = Tab.Table_Name
		AND Constraint_Type = 'PRIMARY KEY'
		AND Col.Table_Name = @TN

	RETURN @Ret
END